dyOptions(stackedGraph = TRUE, animatedZooms=TRUE, digitsAfterDecimal =2) %>%
dyRoller(rollPeriod = 5)
hpq_candle %>% dygraph(main = "Stock Close Price" ) %>%
dyRangeSelector(height = 5, strokeColor = "red") %>%
dyOptions(colors = RColorBrewer::brewer.pal(3, "Set1")) %>%
dyOptions(stackedGraph = TRUE, animatedZooms=TRUE, digitsAfterDecimal =2) %>%
#dyRoller(rollPeriod = )
#Include roll periods?
dyRoller(rollPeriod = 5)  (set to 1)
hpq_candle %>% dygraph(main = "Stock Close Price" ) %>%
dyRangeSelector(height = 5, strokeColor = "red") %>%
dyOptions(colors = RColorBrewer::brewer.pal(3, "Set1")) %>%
dyOptions(stackedGraph = TRUE, animatedZooms=TRUE, digitsAfterDecimal =2)
hpq_candle %>% dygraph(main = "Stock Close Price" ) %>%
dyRangeSelector(height = 5, strokeColor = "red") %>%
dyOptions(colors = RColorBrewer::brewer.pal(3, "Set1")) %>%
dyOptions(stackedGraph = TRUE, animatedZooms=TRUE, digitsAfterDecimal =2) %>%
dyRoller(rollPeriod = )
runApp('~/Academy/Shiny/stockPredictor')
shiny::runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
sym
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Week2/shiny_dashboard')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
?dygraph
?dyOptions
d4
d4 %>% dygraph(main = "Stock Close Price" ) %>%
dyRangeSelector(height = 5, strokeColor = "red") %>%
dyOptions(colors = RColorBrewer::brewer.pal(3, "Set1")) %>%
dyOptions(stackedGraph = TRUE, animatedZooms=TRUE, digitsAfterDecimal =2) %>%
dyRoller(rollPeriod = 1 )
d4 %>% dygraph(main = "Stock Close Price" ) %>%
dyRangeSelector(height = 5, strokeColor = "red") %>%
dyOptions(colors = RColorBrewer::brewer.pal(3, "Set1")) %>%
dyOptions(stackedGraph = TRUE, animatedZooms=TRUE, digitsAfterDecimal =2, stemPlot=TRUE) %>%
dyRoller(rollPeriod = 1 )
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Week2/shiny_dashboard')
runApp('~/Academy/Shiny/stockPredictor')
fortune <- fread(file = "C:/Users/Igor Gitlevich/Documents/Academy/Shiny/stockPredictor/Fortune500.csv")
rownames(state_stat) <- NULL
colnames(fortune) <- c("cik", "symbol", "company", "industry", "sector", "sic", "web",
"assets", "revenue", "income", "eps", "shares")
fortune <- fortune %>% arrange(sector, company, symbol)
fortune[fortune$symbol == "KO", ]$company = "COCA COLA"
class(fortune)
as.data.table(fortune)
?formatstyle
?formatStyle
formatStyle(fortune, fortune$company,    background="skyblue", fontWeight='bold')
formatStyle(fortune, "company",    background="skyblue", fontWeight='bold')
names(company)
names(fortune)
formatStyle(fortune, fortune$company,    background="skyblue", fontWeight='bold')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
library(quantmod)
getSymbols("PY")
getSymbols("SPY")
SPY
head(SPY)
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
switch("Dow",  Dow  = a, Gap = g  )
a
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
indices <- c("GSPC", "SPY", "^DJI", "^NYA")
indices <- c("GSPC", "SPY", "^DJI", "^NYA")
GSPC
NYA
DJI
SPY
indices <- c("GSPC", "SPY", "^DJI", "^NYA")
getSymbols(indices)
indices <- c("^GSPC", "SPY", "^DJI", "^NYA")
getSymbols(indices)
GSPC[,4]
GSPC[,1:4]
head(GSPC[,1:4])
runApp('~/Academy/Shiny/stockPredictor')
Cl(GSPC)
cl(GSPC)
Cl(GSPC)
head(Cl(GSPC))
runApp('~/Academy/Shiny/stockPredictor')
head(Cl(DJI))
runApp('~/Academy/Shiny/stockPredictor')
head(HPQ)
stock <- HPQ[,1:4]
names(stock) <- c("Open", "High", "Low", "Close")
d<-stock %>% dygraph(main = "Stock Close Price" ) %>% dyRangeSelector(height = 20, strokeColor = "") %>%
dyOptions(colors = RColorBrewer::brewer.pal(1, "Set1")) %>%
dyOptions(stackedGraph = TRUE, animatedZooms=TRUE, digitsAfterDecimal =2)
d<-stock %>% dygraph(main = "Stock Close Price" ) %>% dyRangeSelector(height = 20, strokeColor = "") %>%
#dyOptions(colors = RColorBrewer::brewer.pal(1, "Set1")) %>%
dyOptions(stackedGraph = TRUE, animatedZooms=TRUE, digitsAfterDecimal =2)
d
d<-stock %>% dygraph(main = "Stock Close Price" ) %>% dyRangeSelector(height = 20, strokeColor = "") %>%
dyOptions(colors = RColorBrewer::brewer.pal(5, "Set1")) %>%
dyOptions(stackedGraph = TRUE, animatedZooms=TRUE, digitsAfterDecimal =2)
d
cbind(Cl(DJI), d)
runApp('~/Academy/Shiny/stockPredictor')
all <- cbind(stock, Cl("DJI"), Cl(GSPC))
DJI
all <- cbind(stock, Cl(DJI), Cl(GSPC), Cl(NYA), Cl(SPY))
head(all)
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
library(dygraphs)
lungDeaths <- cbind(ldeaths, mdeaths, fdeaths)
dygraph(lungDeaths, main = "Deaths from Lung Disease (UK)") %>%
dySeries("mdeaths", drawPoints = TRUE, color = "blue")
?dyOptions
d<-stock %>% dygraph(main = "Stock Close Price" ) %>% dyRangeSelector(height = 20, strokeColor = "") %>%
dyOptions(colors = RColorBrewer::brewer.pal(5, "Set1")) %>%
dyOptions(stackedGraph = TRUE, animatedZooms=TRUE, digitsAfterDecimal =2)
stock
ะด
d
d %>% dySeriesData(Cl(GSPC))
d %>% dySeriesData("SP500", Cl(GSPC))
Cl(GSPC)
d %>% dySeriesData("SP500", Cl(GSPC))
d %>% dySeriesData("SP500", DJI)
d %>% dySeriesData(Gl(GSPC, "GSPC")
)
?dySeriesData
d %>% dySeriesData("SP500", Cl(GSPC))
d<-stock %>% dygraph(main = "Stock Close Price" ) %>% dyRangeSelector(height = 20, strokeColor = "") %>%
dyOptions(colors = RColorBrewer::brewer.pal(5, "Set1")) %>%
dyOptions(stackedGraph = TRUE, animatedZooms=TRUE, digitsAfterDecimal =2) %>%  dySeriesData("SP500", Cl(GSPC))
d<-stock %>% dygraph(main = "Stock Close Price" ) %>% dyRangeSelector(height = 20, strokeColor = "") %>%
dyOptions(colors = RColorBrewer::brewer.pal(5, "Set1")) %>%
dyOptions(stackedGraph = TRUE, animatedZooms=TRUE, digitsAfterDecimal =2) %>%  dySeriesData("SP500", Cl(GSPC))
d
dySeriesData
?attr
d$x
head(d$x)
head(d$x)
?dyoptions
?dyOptions
d %>% dyOptions(logscale = TRUE)
runApp('~/Academy/Shiny/stockPredictor')
Cl(DJI)
head(Cl(DJI))
head(stock)
head(all)
names(all) <- c("Open", "High", "Low", "Close", "DJI", "GSPC", "NYA", "SPY")
head(all)
stock <- sym()[,1:4 ]
runApp('~/Academy/Shiny/stockPredictor')
head(all)
runApp('~/Academy/Shiny/stockPredictor')
switch(ind(),
None = stock_ind[,1:4] %>% dygraph(main = "Stock Performance" ) %>%
dyRangeSelector(height = 20, strokeColor = "") %>%
dyOptions(colors = RColorBrewer::brewer.pal(5, "Set1")) %>%
dyOptions(stackedGraph = TRUE, animatedZooms=TRUE, digitsAfterDecimal =2),
Dow = stock_ind[,c(4,5)] %>% dygraph(main = "Stock Performance" ) %>%
dyRangeSelector(height = 20, strokeColor = "") %>%
dyOptions(colors = RColorBrewer::brewer.pal(5, "Set1")) %>%
dyOptions(stackedGraph = TRUE, animatedZooms=TRUE, digitsAfterDecimal =2)
%>% dySeries("DJI", axis="y2"),
SP500 = stock_ind[,c(4,6)] %>% dygraph(main = "Stock Performance" ) %>%
dyRangeSelector(height = 20, strokeColor = "") %>%
dyOptions(colors = RColorBrewer::brewer.pal(5, "Set1")) %>%
dyOptions(stackedGraph = TRUE, animatedZooms=TRUE, digitsAfterDecimal =2)
%>% dySeries("SP500", axis="y2"),
SP500 = stock_ind[,c(4,7)] %>% dygraph(main = "Stock Performance" ) %>%
dyRangeSelector(height = 20, strokeColor = "") %>%
dyOptions(colors = RColorBrewer::brewer.pal(5, "Set1")) %>%
dyOptions(stackedGraph = TRUE, animatedZooms=TRUE, digitsAfterDecimal =2)
%>% dySeries("NYA", axis="y2")
)
runApp('~/Academy/Shiny/stockPredictor')
stock_ind
stock <- HPQ
stock_ind <- cbind(stock, Cl(DJI), Cl(GSPC), Cl(NYA), Cl(SPY))
names(stock_ind) <- c("Open", "High", "Low", "Close", "DJI", "SP500", "NYA", "SPY")
stock <- HPQ[,1:4]
stock_ind <- cbind(stock, Cl(DJI), Cl(GSPC), Cl(NYA), Cl(SPY))
names(stock_ind) <- c("Open", "High", "Low", "Close", "DJI", "SP500", "NYA", "SPY")
stock_ind %>% dygraph(main = "Stock Close Price" ) %>% dyRangeSelector(height = 20, strokeColor = "") %>%
dyOptions(colors = RColorBrewer::brewer.pal(5, "Set1")) %>%
dyOptions(stackedGraph = TRUE, animatedZooms=TRUE, digitsAfterDecimal =2)
stock_ind[,c(4,5)] %>% dygraph(main = "Stock Close Price" ) %>% dyRangeSelector(height = 20, strokeColor = "") %>%
dyOptions(colors = RColorBrewer::brewer.pal(5, "Set1")) %>%
dyOptions(stackedGraph = TRUE, animatedZooms=TRUE, digitsAfterDecimal =2)
stock_ind[,c(4,5)] %>% dygraph(main = "Stock Close Price" ) %>% dyRangeSelector(height = 20, strokeColor = "") %>%
dyOptions(colors = RColorBrewer::brewer.pal(5, "Set1")) %>%
dyOptions(stackedGraph = TRUE, animatedZooms=TRUE, digitsAfterDecimal =2) %>% dySeries("DJI.Close", axis="y2") )
stock_ind[,c(4,5)] %>% dygraph(main = "Stock Close Price" ) %>% dyRangeSelector(height = 20, strokeColor = "") %>%
dyOptions(colors = RColorBrewer::brewer.pal(5, "Set1")) %>%
dyOptions(stackedGraph = TRUE, animatedZooms=TRUE, digitsAfterDecimal =2) %>% dySeries("DJI", axis="y2") )
stock_ind[,c(4,5)] %>% dygraph(main = "Stock Close Price" ) %>% dyRangeSelector(height = 20, strokeColor = "") %>%
dyOptions(colors = RColorBrewer::brewer.pal(5, "Set1")) %>%
dyOptions(stackedGraph = TRUE, animatedZooms=TRUE, digitsAfterDecimal =2) %>% dySeries("DJI", axis="y2")
stock_ind[,c(4,6)] %>% dygraph(main = "Stock Close Price" ) %>% dyRangeSelector(height = 20, strokeColor = "") %>%
dyOptions(colors = RColorBrewer::brewer.pal(5, "Set1")) %>%
dyOptions(stackedGraph = TRUE, animatedZooms=TRUE, digitsAfterDecimal =2) %>% dySeries("SP500", axis="y2")
stock_ind[,c(4,7)] %>% dygraph(main = "Stock Close Price" ) %>% dyRangeSelector(height = 20, strokeColor = "") %>%
dyOptions(colors = RColorBrewer::brewer.pal(5, "Set1")) %>%
dyOptions(stackedGraph = TRUE, animatedZooms=TRUE, digitsAfterDecimal =2) %>% dySeries("NYA", axis="y2")
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
stock_ind[,c(4,7)] %>% dygraph(main = "Stock Close Price" ) %>% dyRangeSelector(height = 20, strokeColor = "") %>%
dyOptions(colors = RColorBrewer::brewer.pal(5, "Set1")) %>%
dyOptions(stackedGraph = TRUE, animatedZooms=TRUE, digitsAfterDecimal =2) %>% dySeries("NYA", axis="y2")
stock_ind[,c(4,8)] %>% dygraph(main = "Stock Close Price" ) %>% dyRangeSelector(height = 20, strokeColor = "") %>%
dyOptions(colors = RColorBrewer::brewer.pal(5, "Set1")) %>%
dyOptions(stackedGraph = TRUE, animatedZooms=TRUE, digitsAfterDecimal =2) %>% dySeries("SPY", axis="y2")
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
shiny::runApp('~/Academy/Shiny/stockPredictor')
HPQ
head(HPQ)
stock <- HPQ[,1:4]
head(stock)
runApp('~/Academy/Shiny/stockPredictor')
stock
stock[,4] %>% dygraph()
stock[,4] %>% %>%
dyRangeSelector(height = 20, strokeColor = "") %>%
dyOptions(colors = RColorBrewer::brewer.pal(5, "Set1")) %>%
dyOptions(stackedGraph = TRUE, animatedZooms=TRUE, digitsAfterDecimal =2)
stock[,4] %>% dygraph(main = "Stock Performance" ) %>%
dyRangeSelector(height = 20, strokeColor = "") %>%
dyOptions(colors = RColorBrewer::brewer.pal(5, "Set1")) %>%
dyOptions(stackedGraph = TRUE, animatedZooms=TRUE, digitsAfterDecimal =2
stock[,4]
stock[,4]
stock[,1:4] %>% dygraph(main = "Stock Performance" ) %>%
dyRangeSelector(height = 20, strokeColor = "") %>%
dyOptions(colors = RColorBrewer::brewer.pal(5, "Set1")) %>%
dyOptions(stackedGraph = TRUE, animatedZooms=TRUE, digitsAfterDecimal =2
)
head(stock[,1:4])
tail(stock[,1:4])
shiny::runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
shiny::runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
?checkboxInput
runApp('~/Academy/Shiny/stockPredictor')
shiny::runApp('~/Academy/Shiny/stockPredictor')
?myATR
library(DMwR)
library(xts)
?myATR
?ATR
?BBands
TTR(x)
library(TTR)
TTR(x)
?DMWR
?DMwR
TTR
?TTR
runApp('~/Academy/Shiny/stock_example')
getSymbols("HPQ")
head(HPQ)
HLC(HPQ)
head(HLC(HPQ))
ATR(head(HLC(HPQ)))
runApp('~/Academy/Shiny/stock_example')
install.packages("VGAM")
runApp('~/Academy/Shiny/stock_example')
install.packages("VGAMdata")
runApp('~/Academy/Shiny/stock_example')
library(quantmod)
library(dygraphs)
getSymbols("GOOG")
dygraph(GOOG[,4], main = "Stock Close Price")
%>%
dygraph(GOOG[,1], main = "Stock Open Price") %>% dyRangeSelector()
%>%
dyOptions(stackedGraph = FALSE,colors=c("red", "blue")) %>%
dyRangeSelector()
testing<-dygraph(GOOG[,c(1,4)],
main="Title") %>%
dySeries(,label="LAB1") %>%
dySeries("GOOG.Close",label="LAB2") %>%
dyOptions(stackedGraph = FALSE,colors=c("blue","brown")) %>%
dyRangeSelector()
#%>%
# dySeries(c("lwr", "fit", "upr"), label = "Price")
#%>%
# dyOptions(drawGrid = input$showgrid)
library(xts)
data(sample_matrix)
library(dygraphs)
dygraph(sample_matrix) %>%
dyCandlestick(compress = TRUE)
dygraph(main = "Stock Open Price") %>% dyRangeSelector(height = 20, strokeColor = "")
tickers <- c("AAPL", "MSFT")
getSymbols(tickers)
closePrices <- do.call(merge, lapply(tickers, function(x) Cl(get(x))))
dateWindow <- c("2008-01-01", "2009-01-01")
library(quantmod)
library(dygraphs)
library(dplyr)
gspc_axis <- ts(GSPC[,4])
getSymbols("HPQ")
d4 <- cbind(HPQ[,4], NYA[,4], RSI(HPQ[,4], n=2))
d4 %>%  dygraph(main = "Stock Close Price" ) %>%
dyRangeSelector(height = 5, strokeColor = "red") %>%
dyOptions(colors = RColorBrewer::brewer.pal(3, "Set1")) %>%
dyOptions(stackedGraph = FALSE, animatedZooms=TRUE, digitsAfterDecimal =2) %>%
dySeries("HPQ.Close", axis="y2")
getSymbols("^GSPC")
getSymbols("^DJI")
getSymbols("^NYA")
RSI(HPQ[,4], n=3)
d4 %>%  dygraph(main = "Stock Close Price" ) %>%
dyRangeSelector(height = 5, strokeColor = "red") %>%
dyOptions(colors = RColorBrewer::brewer.pal(3, "Set1")) %>%
dyOptions(stackedGraph = FALSE, animatedZooms=TRUE, digitsAfterDecimal =2) %>%
dySeries("HPQ.Close", axis="y2")
#types of chart
#candlestick
hpq_candle <- HPQ[,1:4]
names(hpq_candle) <- c("Open", "High", "Low", "Close")
hpq_candle <-cbind(hpq_candle, NYA[,4])
d4 %>% dygraph(main = "Stock Close Price" ) %>%
dyRangeSelector(height = 5, strokeColor = "red") %>%
dyOptions(colors = RColorBrewer::brewer.pal(3, "Set1")) %>%
dyOptions(stackedGraph = TRUE, animatedZooms=TRUE, digitsAfterDecimal =2, stemPlot=TRUE) %>%
dyRoller(rollPeriod = 1 )
#Include roll periods?
#dyRoller(rollPeriod = 5)  (set to 1) default
stemplot
Logscale - checkmark
switch("Dow",  Dow  = a, Gap = g  )
stock <- HPQ[,1:4]
stock_ind <- cbind(stock, Cl(GSPC), Cl(SPY), Cl(DJI), Cl(NYA))
names(stock_ind) <- c("Open", "High", "Low", "Close", "SP500", "SPY", "Dow", "NYA")
stock_ind[,c(4,5)] %>% dygraph(main = "Stock Close Price" ) %>% dyRangeSelector(height = 20, strokeColor = "") %>%
dyOptions(colors = RColorBrewer::brewer.pal(3, "Set3" ) ) %>%
dyOptions(stackedGraph = TRUE, animatedZooms=TRUE, digitsAfterDecimal =2) %>%
dySeries("SP500", axis="y2")
switch(ind(),  None = d, Dow = cbind(Cl(DJI),d) %>%  dySeries("DJI.Close", axis="y2", color = "blue") )
stock_ind[,c(1,2,3,4)] %>% dygraph(main = "Stock Close Price" ) %>% dyRangeSelector(height = 20, strokeColor = "") %>%
dyOptions(colors = c("darkgreen", "darkblue") ) %>%
dyOptions(stackedGraph = TRUE, animatedZooms=TRUE, digitsAfterDecimal =2)   %>% dyCandlestick()
%>% dyRoller(rollPeriod = 5)
dySeries("SP500", axis="y2")
library(xts)
data(sample_matrix)
m <- tail(sample_matrix, n = 32)
dygraph(m) %>%
dyCandlestick()
?dygraph
stock_ind[,c(1,2,3,4)] %>% dygraph(main = "Stock Close Price" ) %>%
dyRangeSelector(dateWindow=c("2017-01-01", "2017-12-31"), height = 20, strokeColor = "") %>%
dyOptions(colors = c("darkgreen", "darkblue") ) %>%
dyOptions(stackedGraph = TRUE, animatedZooms=TRUE, digitsAfterDecimal =2)
shiny::runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stock_example')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
?textInput
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
?RSI
runApp('~/Academy/Shiny/stock_example')
runApp('~/Academy/Shiny/stock_example')
runApp('~/Academy/Shiny/stockPredictor')
HPQ
HPQ[,4]
RSI(HPQ[,4], 4)
cbind(HPQ[,4], RSI(HPQ[,4], 4))
head(cbind(HPQ[,4], RSI(HPQ[,4], 4)))
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
?RSI
runApp('~/Academy/Shiny/stockPredictor')
shiny::runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Week2/shiny_dashboard')
library(Gvis)
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
icon(calendar)
icon("cog", lib = "glyphicon")
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
head(fortune[,2:5])
head(fortune[,2:5,7])
head(fortune[,2:5,7:9])
runApp('~/Academy/Shiny/stockPredictor')
?ncol
runApp('~/Academy/Shiny/stockPredictor')
fortune <- fread(file = "C:/Users/Igor Gitlevich/Documents/Academy/Shiny/stockPredictor/Fortune500.csv")
# remove row names
rownames(fortune) <- NULL
#rename columns
colnames(fortune) <- c("cik", "symbol", "company", "industry", "sector", "sic", "web",
"assets", "revenue", "income", "eps", "shares")
#Sort by Sector, then by Company
fortune <- fortune %>% arrange(sector, company, symbol)
fortune[fortune$symbol == "KO", ]$company = "COCA COLA"
#Fetch indices information once
indices <- c("^GSPC", "^DJI", "^NYA")
getSymbols(indices)
#Sectprs and Companies choices
sectorsChoice <- unique(fortune$sector)
companiesChoice <- unique(fortune$company)
#Extra columns not needed
fortune <- fortune %>% select(-web)
names(fortune)
fortune <- fortune %>% select(-web, -cik)
fortune <- fortune %>% select(-c(web, -cik))
fortune <- fread(file = "C:/Users/Igor Gitlevich/Documents/Academy/Shiny/stockPredictor/Fortune500.csv")
# remove row names
rownames(fortune) <- NULL
#rename columns
colnames(fortune) <- c("cik", "symbol", "company", "industry", "sector", "sic", "web",
"assets", "revenue", "income", "eps", "shares")
#Sort by Sector, then by Company
fortune <- fortune %>% arrange(sector, company, symbol)
fortune[fortune$symbol == "KO", ]$company = "COCA COLA"
#Fetch indices information once
indices <- c("^GSPC", "^DJI", "^NYA")
getSymbols(indices)
#Sectprs and Companies choices
sectorsChoice <- unique(fortune$sector)
companiesChoice <- unique(fortune$company)
#Extra columns not needed
fortune <- fortune %>% select(-c(web, -cik))
fortune <- fortune %>% select(-cweb, -cik)
fortune <- fread(file = "C:/Users/Igor Gitlevich/Documents/Academy/Shiny/stockPredictor/Fortune500.csv")
# remove row names
rownames(fortune) <- NULL
#rename columns
colnames(fortune) <- c("cik", "symbol", "company", "industry", "sector", "sic", "web",
"assets", "revenue", "income", "eps", "shares")
#Sort by Sector, then by Company
fortune <- fortune %>% arrange(sector, company, symbol)
fortune[fortune$symbol == "KO", ]$company = "COCA COLA"
#Fetch indices information once
indices <- c("^GSPC", "^DJI", "^NYA")
getSymbols(indices)
#Sectprs and Companies choices
sectorsChoice <- unique(fortune$sector)
companiesChoice <- unique(fortune$company)
#Extra columns not needed
fortune <- fortune %>% select(-cweb, -cik)
fortune <- fread(file = "C:/Users/Igor Gitlevich/Documents/Academy/Shiny/stockPredictor/Fortune500.csv")
# remove row names
rownames(fortune) <- NULL
#rename columns
colnames(fortune) <- c("cik", "symbol", "company", "industry", "sector", "sic", "web",
"assets", "revenue", "income", "eps", "shares")
#Sort by Sector, then by Company
fortune <- fortune %>% arrange(sector, company, symbol)
fortune[fortune$symbol == "KO", ]$company = "COCA COLA"
#Fetch indices information once
indices <- c("^GSPC", "^DJI", "^NYA")
getSymbols(indices)
#Sectprs and Companies choices
sectorsChoice <- unique(fortune$sector)
companiesChoice <- unique(fortune$company)
#Extra columns not needed
fortune <- fortune %>% select(-web, -cik)
names(fortune)
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stock_example')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
shiny::runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/app/stock_app')
shiny::runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
shiny::runApp('~/Academy/Shiny/stockPredictor')
runApp('~/Academy/Shiny/stockPredictor')
